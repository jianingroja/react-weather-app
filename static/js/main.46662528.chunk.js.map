{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","weather","setWeather","input","setInput","useEffect","axios","get","process","then","data","catch","err","console","log","className","onChange","e","target","value","type","onClick","location","name","src","current","condition","icon","alt","temp_c","feelslike_c","country","localtime","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAmEeA,MA/Df,WAAgB,IAAD,EACiBC,mBAAS,MAD1B,mBACNC,EADM,KACGC,EADH,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAsCb,OAlCAC,qBAAU,WACRC,IACGC,IADH,yDAEsDC,iCAFtD,eAIGC,MAAK,SAACC,GACLR,EAAWQ,EAAKA,SAEjBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAwBD,sBAAKG,UAAU,MAAf,UACE,6CACA,sBAAKA,UAAU,SAAf,UACE,uBAAOC,SAzBO,SAACC,GACnBb,EAASa,EAAEC,OAAOC,QAwBgBC,KAAK,OAAOD,MAAOhB,IACjD,wBAAQkB,QAtBO,WACnBf,IACGC,IADH,yDAEsDC,iCAFtD,cAE6FL,IAE1FM,MAAK,SAACC,GACLR,EAAWQ,EAAKA,MAChBN,EAAS,IACTS,QAAQC,IAAR,UACKJ,EAAKA,KAAKY,SAASC,KADxB,wCAIDZ,OAAM,SAACC,GACNC,QAAQC,IAAIF,OASZ,uBAEDX,GACC,qCACE,qBAAKc,UAAU,MAAf,SACE,qBAAKS,IAAKvB,EAAQwB,QAAQC,UAAUC,KAAMC,IAAI,OAEhD,sBAAKb,UAAU,OAAf,UACE,+CAAkBd,EAAQwB,QAAQI,OAAlC,aACA,8CAAiB5B,EAAQwB,QAAQK,YAAjC,aACA,wCAAW7B,EAAQqB,SAASC,QAC5B,2CAActB,EAAQqB,SAASS,WAC/B,8CAAiB9B,EAAQqB,SAASU,uBC/C/BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.46662528.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport \"./style.css\";\n\nfunction App() {\n  const [weather, setWeather] = useState(null);\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_WEATHER_API}&q=Beijing`\n      )\n      .then((data) => {\n        setWeather(data.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleInput = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSearch = () => {\n    axios\n      .get(\n        `https://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_WEATHER_API}&q=${input}`\n      )\n      .then((data) => {\n        setWeather(data.data);\n        setInput(\"\");\n        console.log(\n          `${data.data.location.name}'s weather is presented for you!`\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Weather Now</h1>\n      <div className=\"search\">\n        <input onChange={handleInput} type=\"text\" value={input} />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      {weather && (\n        <>\n          <div className=\"img\">\n            <img src={weather.current.condition.icon} alt=\"\" />\n          </div>\n          <div className=\"info\">\n            <h2>Temperature: {weather.current.temp_c} ℃</h2>\n            <h3>Feels like: {weather.current.feelslike_c} ℃</h3>\n            <h2>City: {weather.location.name}</h2>\n            <h2>Country: {weather.location.country}</h2>\n            <h2>Local Time: {weather.location.localtime}</h2>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}